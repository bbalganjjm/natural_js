1. VOFilterAspect.java에서 파라미터 객체를 Deep 하게 구성 시 1레벨 오브젝트에만 추가 파라미터가 추가되는 문제.

    A :  XSS 공격 문자열 제거도 1레벨 이상은 안되었더군요. 몇레벨이든 끝까지 추가 하도록 변경했습니다.
        AOP Pointcut을 Mapper에 적용하지 말고 첨부된 file/VOFilterAspect.java 파일의 내용들을 같은 파일에 적용해 주세요.

2. Excel Export 문의 - POST, 보안 관련

    A : 파일 다운로드는 POST 방식으로 처리할 수 없습니다. 엑셀 파일 다운로드 시 파라미터를 전달하기 위해 쿠키에 파라미터를 담은 후 쿠키 값을
        vo로 변환해 주는 로직이 내부에 있습니다. 이러한 내부 처리 때문에 엑셀 다운로드할 때도 JSON 조회할 때와 똑같은 방법으로 사용할 수
        있습니다. required=false는 RequestBody에 파라미터가 전달되지 않았을 경우 오류를 발생 시킬 것인가 아닌가를 지정하는 것입니다.
        엑셀다운로드시에 required=false를 지정하지 않아서 400 오류가 발생하면 required=false를 넣어 주세요.
        엑셀다운로드 시 파라미터와 엑셀컬럼정보는 Base64로 엔코딩하여 쿠키 값으로 보내기 때문에 완벽하지는 않지만 POST 보다는 보안이
        강화된 형태입니다. 안심하시고 쓰셔도될 것 같습니다.

         추가로 엑셀 컬럼정보가 길어질 수록 쿠키가 담겨있는 Request Header의 길이가 길어져 WAS 나 WEB 서버에서 오류를 뿜는 경우가 생깁니다.
         엑셀다운로드 개발 중에 로컬 톰켓에서 "Request Header too large" 오류가 발생 한다면
        server.xml의 maxHttpHeaderSize의 크기를 다음과 같이 늘려 주세요.
        <Connector port="8080" maxHttpHeaderSize="65536" protocol="HTTP/1.1" ... />

        Jeus는 디폴트 값이 0으로 지정되어 무한으로 받아주는데 webtob가 기본 8096 bite로 성정되어 있어 엑셀 컬럼이 50개 정도가 넘어가면
        "Bad Request" 오류를 뿜을 수 있습니다. 이때는 webtob설정에서 16192(최대값)로 늘려 줘야 합니다. max request 비스무리한 설정값 일
        꺼애요. 최대값이 16192 이어서 다운로드되는 엑셀 컬럼의 개수는 대략 100 개 안쪽까지만 지정할 수 있습니다.
        100개를 지정 했는데 "Bad Request" 오류가 발생하면 어쩔 수 없이 다운로드되는 엑셀파일의 컬럼 개수를 줄여야 합니다. --;

3. Excel Import 문의 - getDataListFromXlsx

    A : getDataListFromXlsx 메서드가 XlsxToJSONController.java의 함수를 말씀하시는것 같은데 역할 은 Excel 파일을 브라우저에서 받아서
        엑셀 데이터를 추출 한 다음 JSON 문자열 Stream으로 쏴주는 역할을 합니다.
        common.js의 N.grid.prototype.bindExcel 함수와 파라미터(파일, 데이터)가 유기적으로 역여 있는 프레임웍 기능이어서 단독으로 사용은
        어려울것 같아서 설명은 생략 하겠습니다. ^^;

---------------------------------------------------------------------------------------------------------------------------------------------------

4. DB 페이징 방법 변경 공지

    A : 오라클 12c 이상에서 페이징 할 때 가이드를 정신줄 놓고 썼나 치명적인 보안 취약점을 노출 시켰네요? --;

        OFFSET ${startRowNum - 1} ROWS FETCH NEXT ${countPerPage} ROWS ONLY 구문을
        OFFSET #{startRowIndex} ROWS FETCH NEXT #{countPerPage} ROWS ONLY로 바꿔줘야 합니다.

        아울러 MyBatis Mapper XML에서는 ${}로 변수를 치환하면 절대 안되고 #{}로 변수를 바인딩해야 합니다. 치환하면 SQL Injection 공격에 그대로 노출됩니다.
        SQL에 테이블 명을 동적으로 받는 등 어쩔 수 없이 ${}를 사용해야 한다면 변수값에 대해 SQL Injection 공격 문자열을 치환해 주는 처리를 별도로해 줘야 합니다.

        최신 가이드 문서(file/documents.html) 파일도 올려 놓았으니 엎퍼 쳐 주세요. ^^

5. Natural-TEMPLATE 패키지(natural.template.js)가 업데이트되었습니다. GitHub에서 받아서 패치해 주세요.

    A : 그리드 헤더에 있는 요소에 e.{id}.{eventType}으로 이벤트 바인딩이 되지 않던 버그가 수정되었습니다.

--------------------------------------------------------------------------------------------------------------------------------------------------

6. radio 요소가 form 이랑 연동되지 않습니다.

    A : form 은 요소의 id 속성과 컬럼 값을 연결합니다.
        <input name="abc" value="Y">
        <input name="abc" value="N"> 만하면 id 값이 없기 때문에 연결되지 않습니다.

        <input id="abc" name="abc" value="Y">
        <input name="abc" value="N">와 같이 첫 번째 선택 요소에 id 값을 name 속성 값과 같은 값으로 넣어 주시면 됩니다.

        좀더 formal 하게 작성하는건 다음과 같습니다(<span> 태그를 안넣어서 라디오 선택지가 사라졌을 수도 있습니다).

        <form> <!-- form 태그로 감싸는 이유는 다른 탭이나 팝업, 또는 같은 페이지에 있는 이름이 같은 선택 요소와의 충돌을 방지하기 위해서입니다. -->
            <label><input id="abc" name="abc" value="Y"><span>예</span></label>
            <label><input name="abc" value="N"><span>아니오</span></label>
        </form>

        checkbox도 기본은 radio와 동일 하나
        체크박스는 요소가 1개만 있을때는 값이 1이나 Y, on 이면 체크되고 0이나 N, off 이면 체크가 해제됩니다.
         * 1이나 Y, on 등 예/아니오 값의 기본값은 natural.config.js 파일의 N.context.attr("core").sgChkdVal과 N.context.attr("core").sgUnChkdVal에 설정 바랍니다.

        체크박스 요소가 2개 이상이면 컬럼 데이터가 Array 이면 Array 안에 있는 여러 개 값을 한 번에 선택해 주고 String으로 단일 값이 있으면 해단 값에 해당하는 요소를 선택해 줍니다.

        제일 권장하는 방법은 모든 선택 요소를 select 컴포넌트로 처리하면 위와 같은 오류를 방지할 수 있고 소스정리도 깔끔하게할 수 있습니다.
        <input id="abc" value="Y">

        <script type="text/javascript">
        (function() {

        var cont = N(".type0401").cont({
            "p.select.abc" : {
                data : [{
                    col01 : "예",
                    col02 : "Y"
                }, {
                    col01 : "아니오",
                    col02 : "N"
                }]
            },
         ...
         위 col01과 col02는 natural.config.js 파일의 N.context.attr("ui").select.key와 N.context.attr("ui").select.val로 설정한 값을 넣어 주세요.
         select 컴포넌트의 "key" 옵션과 "val" 옵션으로 직접 지정해 주셔도 되구요.

7. natural.js.min.js 파일 다시 받아 주세요(아직 릴리즈는 안됐고 GitHub 들어가서 dist 폴더 안에 들어있는것 받아주세요).

    A : 입력값 유효성 검증 시 첫 번째 검증할 때 검증 메시지가 표시되지 않는 버그가 수정되었습니다.


20190911 ----------------------------------------------------------------------------------------------------------------------------------------------

8. natural.config.js 파일을 수정 바랍니다.

    A : Template 프로젝트에 XSS 공격에 대한 치명적인 보안 결함이 있었습니다. 다음 순서대로 변경 바랍니다.

        1. N.context.attr("ui").form의 "html" 프로퍼티의 값을 false로 변경.
        2. N.context.attr("ui").list의 "html" 프로퍼티를 제거.
        3. N.context.attr("ui").grid의 "html" 프로퍼티를 제거.
        4. N.context.attr("ui").form.onBeforeBindValue 함수를 다음과 같이 변경.

            ...
            /**
             * 서버에서 XSS 필터링된 값을 입력 요소에 바인딩할 때는 원복해서 바인딩하는 이벤트 핸들러.
             *
             * onBeforeBindValue 이벤트
             *  - 값이 바인딩되기 전 실행되는 이벤트, 반드시 val을 (가공 후) 다시 리턴해야 함.
             *  - N.form을 사용하는 N.grid, N.list 에도 같이 적용됨.
             *    - ele : 바인딩될 요소
             *    - ele : 바인딩될 값
             *    - ele : 호출 함수 명 - "bind" | "val"
             */
            "onBeforeBindValue" : function(ele, val, action) {
                if(N.type(val) === "array") {
                    for (var j = 0; j < val.length; j++) {
                        if(N.type(val[j]) === "string"){
                            for (var i = 0; i < this.options.xssReverseChars.length; i++) {
                                val[j] = val[j].replace(new RegExp(this.options.xssReverseChars[i][0], "g"), this.options.xssReverseChars[i][1]);
                            }
                        }
                    }
                    return val;
                } else if(N.type(val) === "string"){
                    for (var i = 0; i < this.options.xssReverseChars.length; i++) {
                        val = val.replace(new RegExp(this.options.xssReverseChars[i][0], "g"), this.options.xssReverseChars[i][1]);
                    }
                    return val;
                } else {
                    return val;
                }
            },
        ...

9. dist/natural.js.min.js와 css/natural.ui.css 파일을 다시 받아 주세요(아직 릴리즈는 안됐고 GitHub 들어가서 dist 폴더와 css 폴더에 있는 파일을 받아 주세요).

    A : 여러가지 버그가 Fix되고 기능이 추가되었습니다.
        natural.ui.css 은 변경이 되어서 엎어 칠 수 없다면 823 ~ 871 라인은 필수로 적용 바랍니다(엎퍼 치는게 제일 좋음).

20190923 --------------------------------------------------------------------------------------------------------------------------------------------

10. 엑셀 업로드모듈 버그 패치, ExceptionResolver 로그기록하는 부분 수정

    A : 현재 파일 위치 밑에 file 폴더에 있는 XlsxToJSONController.java 파일과 ExceptionResolver.java 파일을 받아서 기존 파일을 엎퍼 쳐주세요.